[{"C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\index.js":"1","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\App.js":"2","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\reportWebVitals.js":"3","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\Component\\CASDropdown.js":"4","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\ModelsList.js":"5","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\MakesList.js":"6"},{"size":575,"mtime":1641841636395,"results":"7","hashOfConfig":"8"},{"size":7889,"mtime":1643220512735,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1641841636395,"results":"10","hashOfConfig":"8"},{"size":2589,"mtime":1643219300475,"results":"11","hashOfConfig":"8"},{"size":1256,"mtime":1642013248076,"results":"12","hashOfConfig":"8"},{"size":2229,"mtime":1643221843492,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1bh1gt1",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\index.js",["31"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CASDropdown from './Component/CASDropdown';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["32","33"],"C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\App.js",["34","35","36"],"import React, {Component} from 'react';\r\nimport './App.css';\r\nimport MakesList from './MakesList'\r\nimport ModelsList from './ModelsList'\r\nimport CASDropdown from './Component/CASDropdown';\r\n\r\n/*const items= [\r\n    {\r\n        id:1,\r\n        value:'psdfas',\r\n    }\r\n];\r\n*/\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: \"\",\r\n            task: \"0\",\r\n            name: \"\",\r\n            make: \"\",\r\n            model: \"\",\r\n            odometer: \"\",\r\n            year: \"\",\r\n            owenershipStatus: \"\",\r\n            transmission: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            postalCode: \"\",\r\n            country: \"\",\r\n\r\n        };\r\n        console.log(\"!!!!!@!@!@!@@@@@@@@@@@@@@@!@!@!@@@@@@@@@@@@\")\r\n        console.log(props)\r\n        console.log(\"!!!!!@!@!@!@@@@@@@@@@@@@@@!@!@!@@@@@@@@@@@@\")\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {\r\n            item,\r\n            task,\r\n            name,\r\n            make,\r\n            model,\r\n            odometer,\r\n            year,\r\n            ownershipStatus,\r\n            transmission,\r\n            email,\r\n            phoneNumber,\r\n            postalCode,\r\n            country\r\n        } = this.state;\r\n        console.log('handle submit');\r\n\r\n        fetch('https://h2hukjth21.execute-api.us-east-1.amazonaws.com/api/tasks', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                item: \"0\",\r\n                \"task\": task,\r\n                \"name\": name,\r\n                \"make\": make,\r\n                \"model\": model,\r\n                \"odometer\": odometer,\r\n                \"year\": year,\r\n                \"ownershipStatus\": ownershipStatus,\r\n                \"transmission\": transmission,\r\n                \"email\": email,\r\n                \"phoneNumber\": phoneNumber,\r\n                \"postalCode\": postalCode,\r\n                \"country\": country\r\n            }, null, '\\t')\r\n\r\n        });\r\n        // if you want to see in your console is things are going where they should\r\n        // uncomment this line of code :)\r\n        /*   console.log(this.State);\r\n           this.setState({\r\n               item: {\"task\": task, \"name\": name}\r\n\r\n           })\r\n       */\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    // <MakesList  makeName = MakeList.response />\r\n//<MakesList make = {this.state.selectedMake} />\r\n\r\n    //....Make code....\r\n//<input className=\"inputField\"\r\n//type=\"text\"\r\n//onChange={this.handleChange}\r\n//name= \"make\" />\r\n\r\n    render() {\r\n        console.log(\"FARTed!!!!\")\r\n        return (\r\n\r\n\r\n            <>\r\n                <header className=\"App-header\">\r\n                    <h1>Selling your car?</h1>\r\n                    <h1>We have credible buyers</h1>\r\n\r\n                </header>\r\n                <div className=\"formHeader\">\r\n                    <h1>Fill out this form and leave the rest to us, we </h1>\r\n                    <h1> promise not to leave you hanging</h1>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                    <div className=\"main\"\r\n                    ><h1 className=\"sub-main\">\r\n                        <label>Make </label>\r\n\r\n                    </h1>\r\n\r\n\r\n\r\n\r\n                        <MakesList  />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Model </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"model\"/>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Odometer </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"number\"\r\n                               onChange={this.handleChange}\r\n                               name=\"odometer\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Year </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"number\"\r\n                               onChange={this.handleChange}\r\n                               name=\"year\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Ownership status </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"ownershipStatus\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Transmission </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"transmission\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Email </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"email\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Phone Number </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"number\"\r\n                               onChange={this.handleChange}\r\n                               name=\"phoneNumber\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Postal code </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"postalCode\"/>\r\n                    </div>\r\n\r\n                    <div className=\"main\">\r\n                        <h1 className=\"sub-main\">\r\n                            <label>Country </label>\r\n                        </h1>\r\n                        <input className=\"inputFeild\"\r\n                               type=\"text\"\r\n                               onChange={this.handleChange}\r\n                               name=\"country\"/>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"main\">\r\n                        <h1>\r\n                            <button type=\"submit\" className=\"submitButton\">Send</button>\r\n                        </h1>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\reportWebVitals.js",[],"C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\Component\\CASDropdown.js",["37","38"],"import React, {Component, useState} from 'react';\r\nimport MakesList from '../MakesList';\r\nimport ModelsList from \"../ModelsList\";\r\n\r\nclass CASDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            DDL1: [],\r\n            DDL2: [],\r\n            selectddl: '',\r\n        }\r\n        this.handleCallback = this.handleCallback.bind(this);\r\n    }\r\n\r\n    /*\r\n    handleCallback = (childData) => {\r\n        this.setState({DDL1: childData})\r\n    }\r\n    */\r\n\r\n\r\n    // TODO: incorperate the MakesList.js and ModelsList.js\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            DDL1: [\r\n                {name: this.props.selectedMake, DDL2: ['bah']},\r\n                {name: 'Sports', DDL2: ['Cricket', 'Rugby', 'Boxing', 'Swimming']},\r\n                {name: 'Fruits', DDL2: ['Apple', 'Mango', 'Banana',]},\r\n                {name: 'Countrynames', DDL2: ['India', 'Japan', 'USA', \"Brazil\"]},\r\n            ]\r\n        });\r\n    }\r\n\r\n      handleCallback = (data) =>{\r\n          this.setState({name: data})\r\n      }\r\n\r\n    selectChange(e) {\r\n        this.setState({selectddl: e.target.value});\r\n        this.setState({DDL2: this.state.DDL1.find(x => x.name === e.target.value).DDL2});\r\n    }\r\n\r\n    changeUnit(item)\r\n    {\r\n        this.setState({slecetedMake:item})\r\n        console.log(\"Change Unit!\")\r\n    }\r\n\r\n    // <MakesList make = {{names:this.state.names,changeUnit:this.changeUnit.bind(this)} }/>\r\n//<MakesList />\r\n//<MakesList make = {{names:this.state.names,changeUnit:this.changeUnit.bind(this)} }/>\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n\r\n                    <MakesList data={ {selectedMake:this.state.selectedMake,\r\n                    changeUnit:this.changeUnit.bind(this)}}/>\r\n\r\n                    <select value={this.state.selectddl} onChange={this.selectChange.bind(this)}>\r\n                        <option>...Select...</option>\r\n                        {this.state.DDL1.map(x => {\r\n                            return <option>{x.name}</option>\r\n                        })}\r\n                    </select>\r\n                    <select>\r\n                        <option selected disabled>...........</option>\r\n                        {\r\n                            this.state.DDL2.map(x => {\r\n                                return <option>{x}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CASDropdown;","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\ModelsList.js",["39"],"import React, {PureComponent} from 'react'\r\n//import './makes.css';\r\nimport AsyncSelect from 'react-select/async';\r\nimport CASDropdown from './Component/CASDropdown';\r\n\r\nclass ModelsList extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        console.log(this.props)\r\n    }\r\n    state = {selectedModel: []}\r\n    onChange = selectedModel => {\r\n        this.setState({\r\n            selectedModel: selectedModel || []\r\n        })\r\n    }\r\n\r\n//TODO: have this triggered by 'make' selection, See CASDropdown.js\r\n    loadOptions = async (inputText, callback) => {\r\n        const response = await fetch(`http://localhost:8000/Results?Model_Name_like=${inputText}`);\r\n        if (inputText.length > 0) {\r\n            const json = await response.json();\r\n            callback(json.map(i => ({label: i.Model_Name, value: i.Model_ID})))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className='model'>\r\n                <AsyncSelect\r\n                isMultivalue={this.state.selectedModel}\r\n                onChange={this.onChange}\r\n                placeholder={'type something...'}\r\n                loadOptions={this.loadOptions}\r\n            />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ModelsList","C:\\Users\\hotel\\hamara-ds\\adform\\full-stack\\src\\MakesList.js",["40","41"],{"ruleId":"42","severity":1,"message":"43","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":19},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":19},{"ruleId":"42","severity":1,"message":"51","line":48,"column":13,"nodeType":"44","messageId":"45","endLine":48,"endColumn":17},{"ruleId":"42","severity":1,"message":"52","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"42","severity":1,"message":"50","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":19},{"ruleId":"42","severity":1,"message":"53","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":29},{"ruleId":"42","severity":1,"message":"54","line":5,"column":10,"nodeType":"44","messageId":"45","endLine":5,"endColumn":17},"no-unused-vars","'CASDropdown' is defined but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'ModelsList' is defined but never used.","'item' is assigned a value but never used.","'useState' is defined but never used.","'PureComponent' is defined but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]