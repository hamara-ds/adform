[{"/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/index.js":"1","/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/App.js":"2","/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/reportWebVitals.js":"3","/home/cameron/Test/adform/full-stack/src/index.js":"4","/home/cameron/Test/adform/full-stack/src/reportWebVitals.js":"5","/home/cameron/Test/adform/full-stack/src/App.js":"6","/home/cameron/Test/adform/full-stack/src/MakesList.js":"7"},{"size":500,"mtime":1640754916331,"results":"8","hashOfConfig":"9"},{"size":1762,"mtime":1640818185160,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1640754916331,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1640818503520,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1640818503520,"results":"14","hashOfConfig":"13"},{"size":6938,"mtime":1641501884878,"results":"15","hashOfConfig":"13"},{"size":952,"mtime":1641506513018,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17pi865",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1desy4a",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/index.js",[],"/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/App.js",[],"/home/cameron/hamara-ds-ad/AwsForm/full-stack/src/reportWebVitals.js",[],"/home/cameron/Test/adform/full-stack/src/index.js",[],"/home/cameron/Test/adform/full-stack/src/reportWebVitals.js",[],"/home/cameron/Test/adform/full-stack/src/App.js",["33","34"],"import React, { Component } from 'react';\nimport './App.css';\nimport MakesList from './MakesList'\n\n\nconst items= [\n    {\n        id:1,\n        value:'psdfas',\n    }\n];\n\n\n\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: \"\",\n            task: \"0\",\n            name: \"\",\n            make: \"\",\n            model: \"\",\n            odometer: \"\",\n            year: \"\",\n            owenershipStatus: \"\",\n            transmission: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            postalCode: \"\",\n            country: \"\",\n    \n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n         const { item, task, name, make, model , odometer, year, ownershipStatus, transmission, email, phoneNumber, postalCode, country} = this.state;\n        console.log('handle submit');\n        fetch('https://h2hukjth21.execute-api.us-east-1.amazonaws.com/api/tasks', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({item:\"0\", \"task\": task, \"name\": name, \"make\": make, \"model\": model, \"odometer\": odometer, \"year\": year, \"ownershipStatus\": ownershipStatus, \"transmission\": transmission,\"email\" : email,\"phoneNumber\": phoneNumber, \"postalCode\": postalCode, \"country\": country }, null, '\\t')});\n    // if you want to see in your console is things are going where they should\n    // uncomment this line of code :)\n     /*   console.log(this.State);\n        this.setState({\n            item: {\"task\": task, \"name\": name}\n            \n        })\n    */\n    }\n\n\n    \n\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n\n            \n            \n            <><header className=\"App-header\">\n                <h1>Selling your car?</h1> \n                <h1>We have credible buyers</h1>\n            </header>\n                <div className=\"formHeader\">\n                <h1>Fill out this form and leave the rest to us, we </h1>\n                <h1> promise not to leave you hanging</h1>\n                </div>\n\n               \n                <MakesList/>\n                \n            \n            <form onSubmit={this.handleSubmit}>\n                    <div className=\"main\"\n                    ><h1 className=\"sub-main\">\n                            <label>Make </label>\n                            \n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"make\"\n                             />\n                            \n\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Model </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"model\" />\n\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Odometer </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"number\"\n                            onChange={this.handleChange}\n                            name=\"odometer\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Year </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"number\"\n                            onChange={this.handleChange}\n                            name=\"year\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Ownership status </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"ownershipStatus\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Transmission </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"transmission\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Email </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"email\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Phone Number </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"number\"\n                            onChange={this.handleChange}\n                            name=\"phoneNumber\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Postal code </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"postalCode\" />\n                    </div>\n\n                    <div className=\"main\">\n                        <h1 className=\"sub-main\">\n                            <label>Country </label>\n                        </h1>\n                        <input className=\"inputFeild\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            name=\"country\" />\n                    </div>\n\n\n\n                    <div className=\"main\">\n                        <h1>\n                            <button type=\"submit\" className=\"submitButton\">Send</button>\n                        </h1>\n                    </div>\n\n\n                </form></>\n          );\n    }\n\n}    \n\n\nexport default App;",["35","36"],"/home/cameron/Test/adform/full-stack/src/MakesList.js",[],{"ruleId":"37","severity":1,"message":"38","line":6,"column":7,"nodeType":"39","messageId":"40","endLine":6,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":44,"column":18,"nodeType":"39","messageId":"40","endLine":44,"endColumn":22},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","'item' is assigned a value but never used.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]